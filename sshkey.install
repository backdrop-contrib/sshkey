<?php

/**
 * @file
 * Install, uninstall, schema, and requirements for sshkey.
 */

/**
 * Implements hook_schema().
 */
function sshkey_schema() {
  $schema['sshkey'] = array(
    'description' => 'Stores SSH public keys associated with entities.',
    'fields' => array(
      'key_id' => array(
        'description' => 'The autoincrement primary key SSH key ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'description' => 'The type of entity (e.g. node, user, etc.).',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'The ID of the entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'fingerprint' => array(
        'description' => 'The unique fingerprint (MD5 hash) of the key.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The nickname of the key file.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'value' => array(
        'description' => 'The raw key value.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'The time that the key was created or updated, as a UNIX timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('key_id'),
    'unique keys' => array(
      'fingerprint' => array('fingerprint'),
    ),
    'indexes' => array(
      'entity_type_id' => array('entity_type', 'entity_id'),
    ),
  );

  return $schema;
}

/**
 * Impelements hook_uninstall().
 */
function sshkey_uninstall() {
  // Remove variables.
  config_clear('sshkey.settings', 'sshkey_help');
}

/**
 * Migrate sshkey variables to config.
 */
function sshkey_update_1000() {
  $config = config('sshkey.settings');
  $config->set('sshkey_help', update_variable_get('sshkey_help', 'dynamic value in file /sshkey/sshkey.module line 54'));
  $config->set('sshkey_algorithms', update_variable_get('sshkey_algorithms', 'dynamic value in file /sshkey/sshkey.module line 489'));
  $config->save();

  update_variable_del('sshkey_help');
  update_variable_del('sshkey_algorithms');
}

/**
 * Implements hook_install().
 */
function sshkey_install() {
  // Dynamically generated variable data was detected.
  // /sshkey/sshkey.module line 54
  // /sshkey/sshkey.module line 489
}
